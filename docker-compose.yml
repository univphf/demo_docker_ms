version: '3.5'
services:

#================================
#ADD PortainerIO for Saniia      
#================================
#**** Run portainer services UI  ****
  portainer:
    image: portainer/portainer-ce
    hostname: portainer
    container_name: portainer
    restart: always
    environment:
      TZ: CET
    networks:
      - insa-bridge
    command: -H unix:///var/run/docker.sock
    ports:
        - "9000:9000"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - /etc/localtime:/etc/localtime:ro
        - /etc/timezone:/etc/timezone:ro
        - "./portainer/data:/data"
    restart: always

#**** Portainer Agent Increase API Docker  ****
  portainer_agent:
    image: portainer/agent
    hostname : portainer-agent
    container_name: portainer-agent
    environment:
      TZ: CET
    networks:
      - insa-bridge
    command: -H unix:///var/run/docker.sock
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - "./portainer/data/var/lib/docker/volumes:/var/lib/docker/volumes"
    ports:
        - "9001:9001"
    restart: always
    depends_on:
      - portainer

#================================
#Lancer postgresQl
#================================
  pg-insa:
    container_name: pg-insa
    image: tondeurh/pg-insa:latest
    command: postgres -c 'max_connections=200'
    networks:
      - insa-bridge
    hostname: pg-insa
    restart: always
    ports:
      - "5434:5432"
    environment:
      - TZ=CET
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=postgres
      - POSTGRES_DB=insa
      #POSTGRES_HOST_AUTH_METHOD: trust
      # ne pas oublier de parameter le volume de postgresql sur disque lvm
    volumes:
      - ./pgdata:/var/lib/postgresql/data


#=======================================
# ADD MongoDB services for logs INSA
#=======================================
#**** MongoDB Database for logs  ****
  mongodb:
    container_name: mdb-insa
    hostname: mdb-insa
    image: mongo:4.4.8
    restart: always
    command: ["--auth"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: insa
      MONGO_INITDB_ROOT_PASSWORD: insa
      TZ: CET
    networks:
      - insa-bridge
    ports:
      - "27017:27017"
    # ne pas oublier de parameter le volume de mongo db sur disque lvm
    volumes:
      - "./logs/mongodb-data:/data/db"
      - "./logs/mongodb-config:/data/configdb"

#================================
#Lancer le service ws logs (est une dependance)
#================================
  ws-logs:
    depends_on:
      - mongodb
    container_name: ws-logs
    image: tondeurh/ws-logs:latest
    environment:
      TZ: CET
    networks:
      - insa-bridge
    hostname: ws-logs
    restart: always
    ports:
      - "8880:8880"
    volumes:
      - ./configs:/opt/configs


#================================
#Lancer le service ws template
#================================
  ws-template:
    depends_on:
      - ws-logs
      - pg-insa
    container_name: ws-template
    image: tondeurh/ws_services_template:latest
    environment:
      TZ: CET
    networks:
      - insa-bridge
    hostname: ws-template
    restart: always
    ports:
      - "8800:8800"
    volumes:
      - ./configs:/opt/configs

#renommer le r√©seau par defaut des services
networks:
    insa-bridge:
      name: insa-bridge
